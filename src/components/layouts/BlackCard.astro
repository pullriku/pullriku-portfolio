---
import { Image } from "astro:assets";

interface Props {
	/** カードのタイトル */
	title: string;
	subtitle?: string;
	/** 画像（任意） */
	imageSrc?: ImageMetadata;
	imageAlt?: string;
	/** 右下に並べるタグ（任意） */
	tags?: string[];
}

const {
	title,
	subtitle,
	imageSrc,
	imageAlt = "",
	tags = [],
} = Astro.props as Props;
const hasImage = Boolean(imageSrc);
const gridClass = hasImage
	? "grid grid-cols-[112px,1fr] gap-4 p-5 sm:grid-cols-1"
	: "grid grid-cols-1 gap-4 p-5";
---

<article
  role="group"
  aria-labelledby="title"
  class="rounded-2xl bg-[#0b0f14] text-white shadow-[0_10px_30px_rgba(0,0,0,.45)]"
>
  <div class={gridClass}>
    {hasImage && (
        <Image src={imageSrc!} alt={imageAlt!} class="h-32 w-min rounded-xl object-contain" />
    )}

    <div class="min-w-0">
      <h2 id="title" class="m-0">
        <span class="text-4xl font-bold">{title}</span>
        {subtitle && (
            <p class="m-0 text-slate-100 text-lg font-medium">
            {subtitle}
            </p>
        )}
      </h2>
      <div aria-hidden="true" class="my-3 h-[3px] w-full rounded-full bg-gradient-to-r from-slate-300 via-sky-600 to-sky-950 shadow-[0_1px_0_rgba(255,255,255,.2)]" />

      <div class="mt-2 text-slate-100/90">
        <slot />
      </div>
      {tags.length > 0 && (
        <ul class="mt-3 flex flex-wrap gap-1.5 p-0 list-none" aria-label="tags">
          {tags.map((t) => (
            <li class="select-none whitespace-nowrap rounded-full bg-white/10 px-2 py-1 text-xs text-sky-100 ring-1 ring-white/15">
              {t}
            </li>
          ))}
        </ul>
      )}
    </div>
  </div>
</article>
